// import immage collections 
var five_year = ee.ImageCollection('projects/sat-io/open-datasets/GLC-FCS30D/five-years-map');
var annual = ee.ImageCollection('projects/sat-io/open-datasets/GLC-FCS30D/annual');
var points = ee.FeatureCollection('projects/ee-elizaveta/assets/points_wide');

// points before 2000
var filteredPoints_1985 = points.filter(ee.Filter.eq('pr_land_cover_Year', "1985"));
var filteredPoints_1990 = points.filter(ee.Filter.eq('pr_land_cover_Year', "1990"));
var filteredPoints_1995 = points.filter(ee.Filter.eq('pr_land_cover_Year', "1995"));

// function to buffer the points 
function bufferPoints(radius, bounds) {
  return function(pt) {
    pt = ee.Feature(pt);
    var bufferedGeom = bounds ? pt.buffer(radius).bounds() : pt.buffer(radius);
    return ee.Feature(bufferedGeom).copyProperties(pt);
  };
}


// funciton to calculate the Image Composition by @DavidTheobald but with multiple regions
var compositionImage = function(image, resolution, region) {
  var resolution = resolution || 1000;

  var imageArea = ee.Image.pixelArea().addBands(image);
  var areaDict = imageArea.reduceRegion({
    reducer: ee.Reducer.sum().group({
      groupField: 1,
      groupName: 'class'
    }),
    geometry: region.geometry(),
    scale: resolution,
    maxPixels: 1e13
  });

  var classAreas = ee.List(areaDict.get('groups'));

  var fx = function(x) {
    var areaDict = ee.Dictionary(x);
    var classNumber = ee.Number(areaDict.get('class')).format();
    var area = ee.Number(areaDict.get('sum'));
    return ee.Feature(null, {
      'class': classNumber,
      'areaM2': area
    });
  };

  var features = classAreas.map(fx);

  var fcOut = ee.FeatureCollection(features);

  // Sum all areas to get the total area
  var totalArea = fcOut.aggregate_sum('areaM2');

  // Compute proportion for each class and include original region properties
  fcOut = fcOut.map(function(feature) {
    var area = ee.Number(feature.get('areaM2'));
    var proportion = area.divide(totalArea);
    
    // Add original region properties to each feature
    var properties = region.toDictionary();
    return feature.set(properties).set('proportion', proportion);
  });

  return fcOut;
};

// choose your image 
var image_1985 = five_year.mosaic().select('b1');
var image_1990 = five_year.mosaic().select('b2');
var image_1995 = five_year.mosaic().select('b3');
// set your resolution
var resolution = 30; 

// apply the compositionImage function to multiple polygons

var applyComposition = function(feature) {
  return compositionImage(image, resolution, feature);
};


var applyComposition_1985 = function(feature) {
  return compositionImage(image_1985, resolution, feature);
};

var applyComposition_1990 = function(feature) {
  return compositionImage(image_1990, resolution, feature);
};

var applyComposition_1995 = function(feature) {
  return compositionImage(image_1995, resolution, feature);
};


// write the results with buffers 
var results_1985 = filteredPoints_1985.map(bufferPoints(5000,true)).map(applyComposition_1985).flatten(); // buffer set to 5km radius and polygon borders
var results_1990 = filteredPoints_1985.map(bufferPoints(5000,true)).map(applyComposition_1990).flatten(); // buffer set to 5km radius and polygon borders
var results_1995 = filteredPoints_1985.map(bufferPoints(5000,true)).map(applyComposition_1995).flatten(); // buffer set to 5km radius and polygon borders


// Export the results
Export.table.toDrive({
  collection: results_1985,
  description: 'lm_area_proportion_1985',
  folder: "GEE landcover metrics",
  fileFormat: 'CSV'
});

Export.table.toDrive({
  collection: results_1990,
  description: 'lm_area_proportion_1990',
  folder: "GEE landcover metrics",
  fileFormat: 'CSV'
});

Export.table.toDrive({
  collection: results_1995,
  description: 'lm_area_proportion_1995',
  folder: "GEE landcover metrics",
  fileFormat: 'CSV'
});

var annualmosaic = annual.mosaic();
// Iterate over each band (year) in the image
for (var i = 1; i <= 16; i++) {
  var year = 1999 + i; // starts at year 2000 for annual maps
  var image = annualmosaic.select("b" + i);
  var filteredPoints = points.filter(ee.Filter.eq('pr_land_cover_Year', year.toString()));
  var results_annual = filteredPoints.map(bufferPoints(5000,true)).map(applyComposition).flatten();
  
  Export.table.toDrive({
  collection: results_annual,
  description: 'lm_area_proportion' + year.toString(),
  folder: "GEE landcover metrics",
  fileFormat: 'CSV'
});

}
